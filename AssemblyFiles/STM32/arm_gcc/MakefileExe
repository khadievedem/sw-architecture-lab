OUT_TARGET = EcoMutex1Lab
CONFIG_TARGET = StaticRelease
CCFLAGS_TARGET = -Wall -O3 -g -DECO_LIB
LDFLAGS_TARGET =
# source files.
SRC = \
./Startup/startup_stm32f427vitx.s \
../../../UnitTestFiles/SourceFiles/EcoMutex1Lab.c

# include directories
INCLUDES = \
-I ../../../HeaderFiles \
-I ../../../SharedFiles \
-I ../../../UnitTestFiles/HeaderFiles \
-I $(ECO_FRAMEWORK)/Eco.Core1/SharedFiles \
-I $(ECO_FRAMEWORK)/Eco.InterfaceBus1/SharedFiles \
-I $(ECO_FRAMEWORK)/Eco.FileSystemManagement1/SharedFiles \
-I $(ECO_FRAMEWORK)/Eco.MemoryManager1/SharedFiles

# libraries directories
LIB_DIR = \
-L ../../../BuildFiles/STM32/arm-gcc/StaticRelease \
-L $(ECO_FRAMEWORK)/Eco.InterfaceBus1/BuildFiles/STM32/StaticRelease \
-L $(ECO_FRAMEWORK)/Eco.FileSystemManagement1/BuildFiles/STM32/StaticRelease \
-L $(ECO_FRAMEWORK)/Eco.MemoryManager1/BuildFiles/STM32/StaticRelease \
-L $(ECO_FRAMEWORK)/Eco.System1/BuildFiles/STM32/StaticRelease

OBJ = $(SRC:.c=.o)

OUT = $(OUT_TARGET)
OUT_DIR = ../../../BuildFiles/STM32/arm-gcc/StaticRelease

# C++ compiler flags (-g -O2 -Wall)
CCFLAGS = $(CCFLAGS_TARGET) -T $(LD_SCRIPT) -Wno-missing-braces -mthumb -mfpu=fpv4-sp-d16 -mcpu=cortex-m4 -mfloat-abi=hard -msoft-float -mfpu=vfp -specs=nosys.specs -DECO_STM32 -DUGUID_UTILITY

# compiler
CCC = arm-none-eabi-gcc
AR  = arm-none-eabi-ar

ifeq ($(TARGET), 1)
LIBS_TARGET=-l2F48BBCBE4884CC08ECFC45990017215
else
LIBS_TARGET=
endif

# library paths
LIBS = $(LIB_DIR) -lm -lc -lgcc -l00000000000000000000000000000100 -l00000000000000000000000042757331 -l0000000000000000000000004D656D31 -l00000000000000000000000046534D31 $(LIBS_TARGET)

# compile flags
LDFLAGS = $(LDFLAGS_TARGET) $(LIBS)

.SUFFIXES: .c

.c.o:
	$(CCC) $(INCLUDES) $(CCFLAGS) -c $< -o $@

$(OUT): $(OBJ)
	mkdir -p $(OUT_DIR)
	$(CCC) ${LDFLAGS} -o $(OUT_DIR)/$(OUT) $(OBJ) $(LDFLAGS)

clean:
	rm $(OUT_DIR)/$(OUT)

